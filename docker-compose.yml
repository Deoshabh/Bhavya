# ===============================================
# Docker Compose for Bhavya Events Platform
# For local testing and Dokploy reference
# ===============================================

version: "3.8"

services:
  # Main application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5002:5002"
    environment:
      - NODE_ENV=production
      - PORT=5002
      - FRONTEND_BUILD_PATH=/frontend/build
      # MongoDB connection string for Dokploy
      - DB_URI=mongodb://admin:StrongPassword123@mongo-db-mongodb-avaxdz:27017/bhavya_Events?authSource=admin
      # Additional environment variables (set these in Dokploy)
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret-here}
      - CORS_ORIGIN=${CORS_ORIGIN:-https://bhavya.org.in,https://www.bhavya.org.in}
      # Email configuration
      - EMAIL_FROM=${EMAIL_FROM:-noreply@bhavya.org.in}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      # Cloudinary configuration (if used)
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      # Payment gateway configuration
      - RAZORPAY_KEY_ID=${RAZORPAY_KEY_ID}
      - RAZORPAY_KEY_SECRET=${RAZORPAY_KEY_SECRET}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
    volumes:
      # Mount uploads directory for persistent file storage
      - uploads_data:/app/uploads
      - logs_data:/app/logs
    restart: unless-stopped
    labels:
      # ===== TRAEFIK LABELS FOR DOKPLOY =====
      # Enable Traefik
      - "traefik.enable=true"

      # ===== FRONTEND ROUTING (React App) =====
      # Main domain (bhavya.org.in)
      - "traefik.http.routers.bhavya-frontend.rule=Host(`bhavya.org.in`)"
      - "traefik.http.routers.bhavya-frontend.entrypoints=websecure"
      - "traefik.http.routers.bhavya-frontend.tls=true"
      - "traefik.http.routers.bhavya-frontend.tls.certresolver=letsencrypt"
      - "traefik.http.routers.bhavya-frontend.service=bhavya-app-service"
      - "traefik.http.routers.bhavya-frontend.priority=100"

      # WWW subdomain (www.bhavya.org.in)
      - "traefik.http.routers.bhavya-frontend-www.rule=Host(`www.bhavya.org.in`)"
      - "traefik.http.routers.bhavya-frontend-www.entrypoints=websecure"
      - "traefik.http.routers.bhavya-frontend-www.tls=true"
      - "traefik.http.routers.bhavya-frontend-www.tls.certresolver=letsencrypt"
      - "traefik.http.routers.bhavya-frontend-www.service=bhavya-app-service"
      - "traefik.http.routers.bhavya-frontend-www.priority=100"

      # ===== API ROUTING (Express API) =====
      # API subdomain (api.bhavya.org.in)
      - "traefik.http.routers.bhavya-api.rule=Host(`api.bhavya.org.in`)"
      - "traefik.http.routers.bhavya-api.entrypoints=websecure"
      - "traefik.http.routers.bhavya-api.tls=true"
      - "traefik.http.routers.bhavya-api.tls.certresolver=letsencrypt"
      - "traefik.http.routers.bhavya-api.service=bhavya-app-service"
      - "traefik.http.routers.bhavya-api.priority=200"

      # ===== SERVICE DEFINITION =====
      # Single service pointing to container port 5002
      - "traefik.http.services.bhavya-app-service.loadbalancer.server.port=5002"
      - "traefik.http.services.bhavya-app-service.loadbalancer.server.scheme=http"

      # ===== SECURITY HEADERS =====
      - "traefik.http.middlewares.bhavya-headers.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.bhavya-headers.headers.stsSeconds=31536000"
      - "traefik.http.middlewares.bhavya-headers.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.bhavya-headers.headers.stsPreload=true"
      - "traefik.http.middlewares.bhavya-headers.headers.customRequestHeaders.X-Forwarded-Proto=https"

      # Apply headers to all routers
      - "traefik.http.routers.bhavya-frontend.middlewares=bhavya-headers"
      - "traefik.http.routers.bhavya-frontend-www.middlewares=bhavya-headers"
      - "traefik.http.routers.bhavya-api.middlewares=bhavya-headers"

      # ===== HTTP TO HTTPS REDIRECT =====
      # Redirect middleware
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"

      # HTTP routers for redirect
      - "traefik.http.routers.bhavya-frontend-http.rule=Host(`bhavya.org.in`)"
      - "traefik.http.routers.bhavya-frontend-http.entrypoints=web"
      - "traefik.http.routers.bhavya-frontend-http.middlewares=redirect-to-https"

      - "traefik.http.routers.bhavya-frontend-www-http.rule=Host(`www.bhavya.org.in`)"
      - "traefik.http.routers.bhavya-frontend-www-http.entrypoints=web"
      - "traefik.http.routers.bhavya-frontend-www-http.middlewares=redirect-to-https"

      - "traefik.http.routers.bhavya-api-http.rule=Host(`api.bhavya.org.in`)"
      - "traefik.http.routers.bhavya-api-http.entrypoints=web"
      - "traefik.http.routers.bhavya-api-http.middlewares=redirect-to-https"
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:5002/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - mongodb
    networks:
      - app-network

  # MongoDB service (for local testing only)
  # In Dokploy, use the provided MongoDB connection string
  mongodb:
    image: mongo:6.0
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=StrongPassword123
      - MONGO_INITDB_DATABASE=bhavya_Events
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./backend/scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: unless-stopped
    networks:
      - app-network

  # Redis service (optional, for session management and caching)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    networks:
      - app-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  uploads_data:
    driver: local
  logs_data:
    driver: local

networks:
  app-network:
    driver: bridge
